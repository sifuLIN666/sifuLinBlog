[{"categories":["singbox十点不通"],"contents":" 前言 前段时间几乎\u0026quot;大地震\u0026quot;,clash 归档的归档,删库的删库。只能在此给大佬祝好!\n但是,失去了 clash,我们还能用什么连接到世界呢？当然是把你现在有的 clash 软件归档存好啦\n好吧,其实 clash 删库影响没有那么大,各个平台都有非常好用的软件,比如 windows,mac 还可以用v2ray,nekoray这些软件,但真正苦的其实是像我这种垃圾佬,我们这些人饱受换源之苦,代理之痛,可又经常换设备折腾,搞新系统蹂躏,所以我就妄图一次配置就能享受坐上来自己动的极致舒爽。也就是透明代理啦~\n之前我出过在 debian 部署v2raya的教程,但是当时我正好出了我自用的 j1800,购入了性能极为强悍的 j1900(主要是为了多网口才换的),而 clash 删库正好发生在我卖出了 j1800,等待 j1900 的空挡期\n哈哈笑死,不存档的后果。\n拿到手之后我第一时间配置 v2raya,结果那时候他的软件源直接失效了\n哈哈笑死,不存档的后果\n虽然最后还是去 git 上直接下了源代码上传配置好了。\n但为了不重蹈\u0026quot;哈哈笑死,不存档的后果\u0026quot;,我决定养成存档的习惯,同时 clash 删库让我明白自古专一没结局,终是海王赢天下,所以我顺便研究了一下最近超强内核sing-box的使用方法。\n结果发现这玩意直接把我之前的方案干碎了,废话,手搓玩家基本都是要啥自己建啥,居然说了这么多废话\u0026hellip;现在开始教程吧\n由我提供的一站式部署教程 开个 ip 转发先 1 echo \u0026#34;net.ipv4.ip_forward=1\u0026#34; \u0026gt;\u0026gt; /etc/sysctl.conf 配置文件指南 配置文件链接\n下载后在里面的\u0026quot;singboxONE\u0026quot;的配置文件\u0026quot;config.json\u0026quot;添加你自己的代理配置,我在文件夹里面已经有 ss,vmess,trojan 的模板。\n注意事项 有时代理节点是域名,结果域名在 geosite 里面属于国外域名,会被 dns 分流到代理出站,但是此时 singbox 并不知道代理节点的 IP,于是就会死循环,解决这个问题需要在 dns 配置下添加一条规则\n1 2 3 4 5 6 7 8 9 10 11 12 13 \u0026#34;dns\u0026#34;: { \u0026#34;servers\u0026#34;: [ ], \u0026#34;rules\u0026#34;: [ { \u0026#34;outbound\u0026#34;: \u0026#34;any\u0026#34;, \u0026#34;server\u0026#34;: \u0026#34;local\u0026#34; } ], \u0026#34;strategy\u0026#34;: \u0026#34;prefer_ipv4\u0026#34;, \u0026#34;final\u0026#34;: \u0026#34;google\u0026#34;, \u0026#34;disable_cache\u0026#34;: false, \u0026#34;disable_expire\u0026#34;: false, \u0026#34;independent_cache\u0026#34;: false, \u0026#34;reverse_mapping\u0026#34;: false }, 根据测试结果,dns 配置文件的规则是没有像 clash 那样的先后顺序的(可能不对,希望懂哥来解释一下这个 any 的机制)\n常见代理配置模板 ss 模板 1 2 3 4 5 6 7 8 { \u0026#34;type\u0026#34;: \u0026#34;shadowsocks\u0026#34;, \u0026#34;tag\u0026#34;: \u0026#34;proxy\u0026#34;, \u0026#34;server\u0026#34;: \u0026#34;自己的\u0026#34;, \u0026#34;server_port\u0026#34;: 45144, //自己的端口 \u0026#34;method\u0026#34;: \u0026#34;自己的\u0026#34;, \u0026#34;password\u0026#34;: \u0026#34;自己的\u0026#34; }, vmes 模板 1 2 3 4 5 6 7 8 9 10 11 12 13 { \u0026#34;type\u0026#34;: \u0026#34;vmess\u0026#34;, \u0026#34;tag\u0026#34;: \u0026#34;proxy\u0026#34;, \u0026#34;server\u0026#34;: \u0026#34;换你自己的\u0026#34;, \u0026#34;server_port\u0026#34;: 123, //自己的端口 \u0026#34;uuid\u0026#34;: \u0026#34;换你自己的\u0026#34;, \u0026#34;security\u0026#34;: \u0026#34;auto\u0026#34;, \u0026#34;transport\u0026#34;: { \u0026#34;type\u0026#34;: \u0026#34;ws\u0026#34;, \u0026#34;path\u0026#34;: \u0026#34;/\u0026#34;, \u0026#34;early_data_header_name\u0026#34;: \u0026#34;Sec-WebSocket-Protocol\u0026#34; } } trojan 模板 1 2 3 4 5 6 7 8 9 10 11 12 13 { \u0026#34;type\u0026#34;: \u0026#34;trojan\u0026#34;, \u0026#34;tag\u0026#34;: \u0026#34;proxy\u0026#34;, \u0026#34;server\u0026#34;: \u0026#34;自己的\u0026#34;, \u0026#34;server_port\u0026#34;: 4203, //自己的端口 \u0026#34;password\u0026#34;: \u0026#34;自己的\u0026#34;, \u0026#34;tls\u0026#34;: { \u0026#34;enabled\u0026#34;: true, \u0026#34;disable_sni\u0026#34;: false, \u0026#34;server_name\u0026#34;: \u0026#34;自己的\u0026#34;, \u0026#34;insecure\u0026#34;: true } } 完成之后确保 singboxONE 有如下文件\nconfig.json geoip.db geosite.db sing-box sing-box.service 1 2 3 4 5 6 7 8 9 10 11 12 13 # 创建日志和配置文件夹以及存放geo数据库 mkdir -p /var/singbox mkdir -p /var/lib/sing-box mkdir -p /usr/local/etc/sing-box chmod -R +w /var/singbox # 将软件以及配置还有geo数据库移动到对应文件夹 mv singboxONE/sing-box /usr/local/bin mv singboxONE/sing-box.service /etc/systemd/system mv singboxONE/config.json /usr/local/etc/sing-box mv singboxONE/geoip.db /var/lib/sing-box mv singboxONE/geosite.db /var/lib/sing-box # 赋予singbox二进制文件可执行权限 chmod +x /usr/local/bin/sing-box 重载系统服务并开启 sing-box\n1 2 3 4 5 6 # 重载systemctl配置否则下面开启singbox的命令是无效的 systemctl daemon-reload # 开启sing-box systemctl start sing-box.service systemctl enable sing-box.service systemctl status sing-box.service singbox 劫持 host singbox 中设置 host 劫持 sing-box 劫持 host 需要在 route 配置中添加域名规则并结合出站配置使用\n并且注意!!!\nroute 模块的规则有先后顺序,先匹配到先出站\r具体操作很简单,在出站设置一个直连出站并覆写 IP 地址和端口,最后在路由的规则中添加一条域名规则,匹配到这条规则就走自定义的出站\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 { \u0026#34;log\u0026#34;: { \u0026#34;disabled\u0026#34;: false, \u0026#34;level\u0026#34;: \u0026#34;info\u0026#34;, \u0026#34;output\u0026#34;: \u0026#34;/var/singbox/box.log\u0026#34;, \u0026#34;timestamp\u0026#34;: true }, \u0026#34;dns\u0026#34;: { \u0026#34;servers\u0026#34;: [], \u0026#34;rules\u0026#34;: [{ \u0026#34;outbound\u0026#34;: \u0026#34;any\u0026#34;, \u0026#34;server\u0026#34;: \u0026#34;local\u0026#34; }], \u0026#34;strategy\u0026#34;: \u0026#34;prefer_ipv4\u0026#34;, \u0026#34;final\u0026#34;: \u0026#34;google\u0026#34;, \u0026#34;disable_cache\u0026#34;: false, \u0026#34;disable_expire\u0026#34;: false, \u0026#34;independent_cache\u0026#34;: false, \u0026#34;reverse_mapping\u0026#34;: false }, \u0026#34;inbounds\u0026#34;: [ { \u0026#34;type\u0026#34;: \u0026#34;tun\u0026#34;, \u0026#34;tag\u0026#34;: \u0026#34;tun-in\u0026#34;, \u0026#34;inet4_address\u0026#34;: \u0026#34;172.19.0.1/30\u0026#34;, \u0026#34;mtu\u0026#34;: 1400, \u0026#34;auto_route\u0026#34;: true, \u0026#34;strict_route\u0026#34;: false, \u0026#34;stack\u0026#34;: \u0026#34;system\u0026#34;, \u0026#34;sniff\u0026#34;: true, \u0026#34;sniff_override_destination\u0026#34;: false } ], \u0026#34;outbounds\u0026#34;: [ { \u0026#34;type\u0026#34;: \u0026#34;direct\u0026#34;, \u0026#34;tag\u0026#34;: \u0026#34;direct\u0026#34; }, { \u0026#34;type\u0026#34;: \u0026#34;direct\u0026#34;, \u0026#34;tag\u0026#34;: \u0026#34;hosthijack\u0026#34;, \u0026#34;override_address\u0026#34;: \u0026#34;192.168.234.3\u0026#34;, \u0026#34;override_port\u0026#34;: 9093 }, { \u0026#34;type\u0026#34;: \u0026#34;block\u0026#34;, \u0026#34;tag\u0026#34;: \u0026#34;block\u0026#34; }, { \u0026#34;type\u0026#34;: \u0026#34;dns\u0026#34;, \u0026#34;tag\u0026#34;: \u0026#34;dns-out\u0026#34; } ], \u0026#34;route\u0026#34;: { \u0026#34;geoip\u0026#34;: { \u0026#34;download_url\u0026#34;: \u0026#34;https://github.com/soffchen/sing-geoip/releases/latest/download/geoip.db\u0026#34;, \u0026#34;download_detour\u0026#34;: \u0026#34;proxy\u0026#34; }, \u0026#34;geosite\u0026#34;: { \u0026#34;download_url\u0026#34;: \u0026#34;https://github.com/soffchen/sing-geosite/releases/latest/download/geosite.db\u0026#34;, \u0026#34;download_detour\u0026#34;: \u0026#34;proxy\u0026#34; }, \u0026#34;rules\u0026#34;: [ { \u0026#34;protocol\u0026#34;: \u0026#34;dns\u0026#34;, \u0026#34;outbound\u0026#34;: \u0026#34;dns-out\u0026#34; }, { \u0026#34;protocol\u0026#34;: [\u0026#34;quic\u0026#34;], \u0026#34;outbound\u0026#34;: \u0026#34;block\u0026#34; }, { \u0026#34;domain\u0026#34;: \u0026#34;自定义域名\u0026#34;, \u0026#34;outbound\u0026#34;: \u0026#34;hosthijack\u0026#34; } ], \u0026#34;auto_detect_interface\u0026#34;: true } } ","date":"2024-06-07T00:00:00Z","permalink":"http://localhost:1313/zh-cn/2024/06/07/introduce-singbox-part1/","section":"posts","series":["singbox:从入门到clash"],"summary":"前言 前段时间几乎\u0026quot;大地震\u0026quot;,clash 归档的归档,删库的删库。只能在此给大佬祝好! 但是,失去了 clash,我们还能用什么","tags":["singbox","科学上网"],"title":"初识singbox","type":null},{"categories":["软路由部署"],"contents":" 前期准备工作 首先刷好 debian,这个有手就行,唯一的问题是镜像源比较慢,不管是国内源还是官方源,建议烧香拜佛之后再装,或者打电话给运营商通知他们要出国一下让他们取消你的墙\n装好系统之后先更新软件源 1 2 apt-get update apt-get install -y vim wget curl tar zip sudo 启动 ssh 连接 1 2 echo \u0026#34;PermitRootLogin yes\u0026#34; \u0026gt;\u0026gt; /etc/ssh/sshd_config /etc/init.d/ssh restart 修改固定 ip 这步很关键,不然 DHCP 到期换 ip ,所有以这个为网关的设备都会成为孤儿\r1 vim /etc/network/interfaces 把原本的内容 auto lo\niface lo inet loopback\nallow-hotplug ens35\niface ens35 inet dhcp\n变为 iface ens35 inet static\naddress 192.168.1.100\nnetmask 255.255.255.0\ngateway 192.168.1.1\n使用 ipv6\niface ens35 inet6 dhcp\n开启 ipv4 转发 不开的话是没有办法代理分流的哦\r1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 # 填写如下内容开启ipv4转发,并关闭ipv6 echo \u0026#34;net.ipv4.ip_forward=1 net.ipv6.conf.all.disable_ipv6 = 1\u0026#34; \u0026gt;\u0026gt; /etc/sysctl.conf # 如果你像我一样没有公网ipv4还想顺畅外网访问家中服务,就要把ipv6开启填这个 echo \u0026#34;net.ipv4.ip_forward=1\u0026#34; \u0026gt;\u0026gt; /etc/sysctl.conf # 检查 sysctl -p # 清DNS缓存（debian12不需要） systemctl restart systemd-resolved.service # 重启 reboot # 检测ip ip addr 上传文件 将我提供的文件中的 clash 文件夹和 mosdns 文件夹上传到 root 目录下\n安装代理软件 安装 v2raya 添加公钥和软件源 1 2 3 4 5 6 # 报错的话可以试试逐条复制 wget -qO - https://apt.v2raya.org/key/public-key.asc | sudo tee /etc/apt/keyrings/v2raya.asc echo \u0026#34;deb [signed-by=/etc/apt/keyrings/v2raya.asc] https://apt.v2raya.org/ v2raya main\u0026#34; | sudo tee /etc/apt/sources.list.d/v2raya.list sudo apt update 添加软件源主要是 v2raya 的源不在官方源所以需要手动加一下\n安装 1 2 3 4 5 6 sudo apt install v2raya v2ray #v2ray内核 sudo apt install v2raya xray #xray内核 # 启动并设置自启 sudo systemctl start v2raya.service # 开机自启 sudo systemctl enable v2raya.service clash 永不为奴!! 添加 clash 的配置文件 1 2 3 4 5 wget -O config.yaml \u0026#39;你机场的订阅链接\u0026amp;flag=clash\u0026#39; # 下载Country.mmdb文件(去github上下载最新) wget https://github.com/Dreamacro/maxmind-geoip/releases/latest/download/Country.mmdb # 下载yacd面板(去github上找最新) wget https://github.com/haishanh/yacd/releases/download/v0.3.8/yacd.tar.xz 解压并移动到指定目录 1 2 3 tar -xf yacd.tar.xz mkdir /etc/clash mv public /etc/clash/yacd 下载 clash pre,ium 1 2 wget https://github.com/Dreamacro/clash/releases/download/premium/clash-linux-amd64-2023.08.17.gz gzip -d clash-linux-amd64-2023.08.17.gz 移动到指定目录 1 2 3 4 5 6 7 mv clash-linux-amd64-2023.08.17 /usr/local/bin/clash mkdir /etc/clash mv config.yaml /etc/clash/ mv Country.mmdb /etc/clash/ mv clash/template.yaml /etc/clash # 赋予执行权限 chmod +x /usr/local/bin/clash 启动 systemd 守护进程服务 这个步骤主要防暴毙 1 2 3 4 5 6 7 8 9 10 11 echo \u0026#34;[Unit] Description=Clash daemon, A rule-based proxy in Go. After=network-online.target [Service] Type=simple Restart=always ExecStart=/usr/local/bin/clash -d /etc/clash [Install] WantedBy=multi-user.target\u0026#34; \u0026gt;\u0026gt; /etc/systemd/system/clash.service 重新加载测试 1 2 3 4 5 6 7 systemctl daemon-reload # 将系统DNS服务器指定为本地的IP192.168.234.3 vim /etc/resolved.conf systemctl start clash # 开机自启 systemctl enable clash # 如果失败就不要用V3指令集的了 DNS 部分 安装 mosdns 下载 mosdns 1 2 3 4 5 6 7 8 9 10 # 报错的话可以试试把梯子关了 wget https://github.com/IrineSistiana/mosdns/releases/download/v5.1.3/mosdns-linux-amd64.zip mkdir /etc/mosdns mkdir /var/mosdns touch /var/disable-ads.txt mv mosdns/etc/mosdns/* /etc/mosdns mv mosdns/var/mosdns/* /var/mosdns mv mosdns/v2dat /opt chmod +x /opt/v2dat 康康你的 53 端口有没有被后入 1 2 3 4 5 6 7 lsof -i :53 # 根据你占用53端口的进程名字来修改stop后面的参数 systemctl stop systemd-resolved.service # 别忘了移除开机自启 systemctl disable systemd-resolved.service # 检查一下 lsof -i :53 mosdns:我要进来咯~ 1 2 3 4 5 6 7 8 9 10 11 12 13 14 # 解压 unzip -o -d mosdns mosdns-xxx-xxx.zip # 把mosdns软件移到绝对工作目录 mv /root/mosdns/mosdns /usr/bin/ chmod +x /usr/bin/mosdns # mosdns service install -d 工作目录绝对路径 -c 配置文件路径 mosdns service install -d /usr/bin -c /etc/mosdns/config.yaml # 启动mosdns并设置开机自启 mosdns service start systemctl enable mosdns.service # 检查状态 systemctl status mosdns.service 安装 adguardhome DNS 拦截广告只能欺负野鸡网站\r,面对 youtube 以及国内的爱优腾都是被操的走不动路的,此外 DNS 规则也很难找\r,博主本人已经变成了广告的形状(不是)\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 # 下载AdGuardHome到本机,三选一都是安装脚本,能用就行 curl -s -S -L https://raw.githubusercontent.com/AdguardTeam/AdGuardHome/master/scripts/install.sh | sh -s -- -v wget --no-verbose -O - https://raw.githubusercontent.com/AdguardTeam/AdGuardHome/master/scripts/install.sh | sh -s -- -v fetch -o - https://raw.githubusercontent.com/AdguardTeam/AdGuardHome/master/scripts/install.sh | sh -s -- -v # 启动 systemctl start AdGuardHome # 状态 systemctl status AdGuardHome # 开机自启 systemctl enable AdGuardHome # 重启 systemctl restart AdGuardHome # 停止 systemctl stop AdGuardHome 然后访问 http://你的ip:3000设置 adguardhome 就行了\n终于结束了 1 2 3 4 5 6 7 8 9 10 11 12 13 14 vim /etc/resolv.conf # 将dns服务器设置为旁路由ip nameserver 192.168.50.5 # 编辑cron mkdir /etc/mycron mv /clash/clash_update.sh /etc/mycron mv /mosdns/mosdns_update.sh /etc/mycron chmod +x /etc/mycron/clash_update.sh chmod +x /etc/mycron/mosdns_update.sh # 添加 echo \u0026#34;30 4 * * * root /etc/mycron/mosdns_update.sh 35 4 * * * root /etc/mycron/clash_update.sh\u0026#34; \u0026gt;\u0026gt; /etc/crontab ","date":"2024-06-05T00:00:00Z","permalink":"http://localhost:1313/zh-cn/2024/06/05/home-gateway/","section":"posts","series":[],"summary":"给电脑刷上debian系统，然后安装openwrttttttt~~~个鬼!直接手搓命令行完成一个DNS,自动分流的家庭网关","tags":["软路由","debian"],"title":"将废弃电脑变成软路由","type":null},{"categories":null,"contents":"这里是个人简介的正文内容\u0026hellip;\r666\r测试测试\n","date":"0001-01-01T00:00:00Z","permalink":"http://localhost:1313/zh-cn/profile/","section":"","series":null,"summary":"这里是个人简介的正文内容\u0026hellip; 666 测试测试","tags":null,"title":"关于我","type":"profile"},{"categories":null,"contents":"","date":"0001-01-01T00:00:00Z","permalink":"http://localhost:1313/zh-cn/link/","section":"","series":null,"summary":"","tags":null,"title":"友链","type":"link"}]